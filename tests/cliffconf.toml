# git-cliff ~ configuration file
# https://git-cliff.org/docs/configuration

[changelog]
# template for the changelog header
header = """
# Changelog\n
"""

body = """
{% if version -%}
    ## [{{ version | trim_start_matches(pat="test_app_") }}] - {{ timestamp | date(format="%Y-%m-%d") }}
{% else -%}
    ## [Unreleased]
{% endif -%}
{% for group, commits in commits | group_by(attribute="group") %}
    ### {{ group | upper_first }}
    {% for commit in commits | unique(attribute="message") %}
        - {{ commit.message | upper_first }}
        {{ commit.body }}
    {% endfor %}
{% endfor %}\n
"""
# template for the changelog footer
footer = """
{% for release in releases -%}
    {% if release.version -%}
        {% if release.previous.version -%}
            [{{ release.version | trim_start_matches(pat="test_app_") }}]: \
                end of changelog
        {% endif -%}
    {% else -%}
        [unreleased]: bla
    {% endif -%}
{% endfor %}
"""
# remove the leading and trailing whitespace from the templates
trim = true

[git]
# parse the commits based on https://www.conventionalcommits.org
conventional_commits = true
# filter out the commits that are not conventional
filter_unconventional = true
# process each line of a commit as an individual commit
split_commits = false
# regex for parsing and grouping commits
commit_parsers = [
  { field = "author.name", pattern = "vmn", skip = true },
  { message = "^feat*", group = "<!-- 0 --> :rocket: New features" },
  { message = "^.*: fix*", group = "<!-- 1 --> :bug: Bug fixes" },
  { message = "^perf*", group = "<!-- 2 --> :zap: Performance" },
  { message = "^chore*", group = "<!-- 3 --> :gear: Miscellaneous" },
  { message = "^.*: remove", group = "<!-- 4 --> :gear: Removed" },
  { message = "^.*: delete", group = "<!-- 4 --> :gear: Removed" },
  { message = "^.*", group = "<!-- 5 --> :gear: Changed" },
]
# filter out the commits that are not matched by commit parsers
filter_commits = true
# sort the tags topologically
topo_order = false
# sort the commits inside sections by oldest/newest order
sort_commits = "oldest"
